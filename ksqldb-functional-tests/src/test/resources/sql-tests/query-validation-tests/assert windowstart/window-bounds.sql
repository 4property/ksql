--@test: window-bounds - table session
SET 'ksql.windowed.session.key.legacy' = 'false';CREATE STREAM TEST (ID BIGINT KEY, IGNORED STRING) WITH (kafka_topic='test_topic', value_format='DELIMITED');
CREATE TABLE S2 as SELECT ID, WindowStart as wstart, WindowEnd as wend, COUNT(1) AS Count FROM test WINDOW SESSION (30 SECONDS) group by id;
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 0);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 10000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (1, '1', 10000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (1, '1', 40000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 1, 0, 0, 0);
ASSERT VALUES `S2` (ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 0);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 10000, 2, 10000, 0, 10000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 10000, 10000, 1, 10000, 10000, 10000);
ASSERT VALUES `S2` (ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 10000, 10000, 10000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 10000, 40000, 2, 40000, 10000, 40000);

--@test: window-bounds - table tumbling
CREATE STREAM TEST (ID BIGINT KEY, IGNORED STRING) WITH (kafka_topic='test_topic', value_format='DELIMITED');
CREATE TABLE S2 as SELECT ID, WindowStart as wstart, WindowEnd as wend, COUNT(1) AS Count FROM test WINDOW TUMBLING (SIZE 30 SECONDS) group by id;
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 0);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 10000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (100, '100', 30000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (100, '100', 45000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (100, '100', 50000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 35000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 70000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 30000, 1, 0, 0, 30000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 30000, 2, 10000, 0, 30000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (100, 30000, 60000, 1, 30000, 30000, 60000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (100, 30000, 60000, 2, 45000, 30000, 60000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (100, 30000, 60000, 3, 50000, 30000, 60000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 30000, 60000, 1, 35000, 30000, 60000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 60000, 90000, 1, 70000, 60000, 90000);

--@test: window-bounds - table hopping
CREATE STREAM TEST (ID BIGINT KEY, IGNORED STRING) WITH (kafka_topic='test_topic', value_format='DELIMITED');
CREATE TABLE S2 as SELECT ID, WindowStart as wstart, WindowEnd as wend, COUNT(1) AS Count FROM test WINDOW HOPPING (SIZE 30 SECONDS, ADVANCE BY 5 SECONDS) group by id;
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 0);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (100, '100', 2000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 4999);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (0, '0', 5000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 30000, 1, 0, 0, 30000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (100, 0, 30000, 1, 2000, 0, 30000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 30000, 2, 4999, 0, 30000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 30000, 3, 5000, 0, 30000);
ASSERT VALUES `S2` (ID, WSTART, WEND, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 5000, 35000, 1, 5000, 5000, 35000);

--@test: window-bounds - in expressions
CREATE STREAM TEST (ID BIGINT KEY, IGNORED STRING) WITH (kafka_topic='test_topic', value_format='DELIMITED');
CREATE TABLE S2 as SELECT ID, Test.WindowStart / 2, WindowEnd / id, COUNT(1) AS Count FROM test WINDOW TUMBLING (SIZE 30 SECONDS) group by id;
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (2, '2', 0);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (100, '100', 2000);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (2, '2', 4999);
INSERT INTO `TEST` (ID, IGNORED, ROWTIME) VALUES (2, '2', 5000);
ASSERT VALUES `S2` (ID, KSQL_COL_0, KSQL_COL_1, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (2, 0, 15000, 1, 0, 0, 30000);
ASSERT VALUES `S2` (ID, KSQL_COL_0, KSQL_COL_1, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (100, 0, 300, 1, 2000, 0, 30000);
ASSERT VALUES `S2` (ID, KSQL_COL_0, KSQL_COL_1, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (2, 0, 15000, 2, 4999, 0, 30000);
ASSERT VALUES `S2` (ID, KSQL_COL_0, KSQL_COL_1, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (2, 0, 15000, 3, 5000, 0, 30000);

--@test: window-bounds - windowed group by - non-aggregate window bounds in SELECT
CREATE STREAM INPUT (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE OUTPUT as SELECT ROWKEY, count(1) as count, windowstart as WSTART, windowend AS WEND FROM INPUT WINDOW TUMBLING (SIZE 1 SECOND) group by ROWKEY;
INSERT INTO `INPUT` (ROWKEY, ROWTIME) VALUES (0, 10345);
INSERT INTO `INPUT` (ROWKEY, ROWTIME) VALUES (0, 10445);
INSERT INTO `INPUT` (ROWKEY, ROWTIME) VALUES (0, 13251);
ASSERT VALUES `OUTPUT` (ROWKEY, COUNT, WSTART, WEND, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 1, 10000, 11000, 10345, 10000, 11000);
ASSERT VALUES `OUTPUT` (ROWKEY, COUNT, WSTART, WEND, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 2, 10000, 11000, 10445, 10000, 11000);
ASSERT VALUES `OUTPUT` (ROWKEY, COUNT, WSTART, WEND, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 1, 13000, 14000, 13251, 13000, 14000);
ASSERT table OUTPUT (`ROWKEY` INTEGER PRIMARY KEY, `COUNT` BIGINT, `WSTART` BIGINT, `WEND` BIGINT) WITH (KAFKA_TOPIC='OUTPUT');

--@test: window-bounds - windowed group by - aggregate window bounds in UDAF in SELECT
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Window bounds column WINDOWSTART can only be used in the SELECT clause of windowed aggregations
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1), min(windowstart), min(windowend) FROM test WINDOW TUMBLING (SIZE 1 SECOND) group by ROWKEY;
--@test: window-bounds - windowed group by - window bounds used in expression with aggregate in SELECT
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1) * windowend FROM test WINDOW TUMBLING (SIZE 1 SECOND) group by ROWKEY;
INSERT INTO `TEST` (ROWKEY, ROWTIME) VALUES (0, 10345);
INSERT INTO `TEST` (ROWKEY, ROWTIME) VALUES (0, 10445);
INSERT INTO `TEST` (ROWKEY, ROWTIME) VALUES (0, 13251);
ASSERT VALUES `S2` (ROWKEY, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 11000, 10345, 10000, 11000);
ASSERT VALUES `S2` (ROWKEY, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 22000, 10445, 10000, 11000);
ASSERT VALUES `S2` (ROWKEY, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 14000, 13251, 13000, 14000);
ASSERT table S2 (`ROWKEY` INTEGER PRIMARY KEY, `KSQL_COL_0` BIGINT) WITH (KAFKA_TOPIC='S2');

--@test: window-bounds - windowed group by - aggregate window bounds in WHERE
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Error in WHERE expression: Unknown column WINDOWEND.
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1) as count FROM test WINDOW TUMBLING (SIZE 1 SECOND) WHERE min(windowEnd) < 15000 group by ROWKEY;
--@test: window-bounds - windowed group by -  window bounds in GROUP BY
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Window bounds column WINDOWSTART can only be used in the SELECT clause of windowed aggregations
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1) as count FROM test WINDOW TUMBLING (SIZE 1 SECOND) group by ROWKEY, WINDOWSTART, WINDOWEND;
--@test: window-bounds - windowed group by -  only window bounds in GROUP BY
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Window bounds column WINDOWSTART can only be used in the SELECT clause of windowed aggregations
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1) as count FROM test WINDOW TUMBLING (SIZE 1 SECOND) group by WINDOWSTART, WINDOWEND;
--@test: window-bounds - windowed group by -  only window bounds in GROUP BY only column
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Window bounds column WINDOWSTART can only be used in the SELECT clause of windowed aggregations
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1) as count FROM test WINDOW TUMBLING (SIZE 1 SECOND) group by WINDOWSTART;
--@test: window-bounds - windowed group by - window bounds in expression in GROUP BY
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Window bounds column WINDOWSTART can only be used in the SELECT clause of windowed aggregations
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1) as count FROM test WINDOW TUMBLING (SIZE 1 SECOND) group by ROWKEY, WINDOWSTART / 1000, ABS(WINDOWEND);
--@test: window-bounds - windowed group by - window bounds in HAVING
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Window bounds column WINDOWSTART can only be used in the SELECT clause of windowed aggregations
CREATE STREAM TEST (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');
CREATE TABLE S2 as SELECT ROWKEY, count(1) as count FROM test WINDOW TUMBLING (SIZE 1 SECOND) group by ROWKEY HAVING windowStart > 11000 AND min(windowEnd) < 15000;
