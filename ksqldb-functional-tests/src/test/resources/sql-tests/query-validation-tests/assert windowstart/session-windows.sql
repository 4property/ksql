--@test: session-windows - out of order - no grace period
CREATE STREAM TEST (ID BIGINT KEY, VALUE bigint) WITH (kafka_topic='test_topic', value_format='DELIMITED');
CREATE TABLE S2 as SELECT ID, max(value) FROM test WINDOW SESSION (30 SECONDS) group by id;
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 0, 0);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 1, 70010);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 5, 10009);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 6, 10010);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 100, 10009);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 101, 10010);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 200, 86412022);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 200, 60000);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 0, 0);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 1, 70010, 70010, 70010);
ASSERT VALUES `S2` (ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 0);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 5, 10009, 0, 10009);
ASSERT VALUES `S2` (ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 10009, 0, 10009);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 6, 10010, 0, 10010);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 100, 10009, 10009, 10009);
ASSERT VALUES `S2` (ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 10009, 10009, 10009);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 101, 10010, 10009, 10010);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 200, 86412022, 86412022, 86412022);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 200, 60000, 60000, 60000);

--@test: session-windows - out of order - explicit grace period
CREATE STREAM TEST (ID BIGINT KEY, VALUE bigint) WITH (kafka_topic='test_topic', value_format='DELIMITED');
CREATE TABLE S2 as SELECT ID, max(value) FROM test WINDOW SESSION (30 SECONDS, GRACE PERIOD 1 MINUTE) group by id;
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 0, 0);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 1, 100010);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 5, 10009);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (0, 6, 10010);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 100, 10009);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 101, 10010);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 200, 86412022);
INSERT INTO `TEST` (ID, VALUE, ROWTIME) VALUES (1, 200, 60000);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 0, 0);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 1, 100010, 100010, 100010);
ASSERT VALUES `S2` (ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 0);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 6, 10010, 0, 10010);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 101, 10010, 10010, 10010);
ASSERT VALUES `S2` (ID, KSQL_COL_0, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 200, 86412022, 86412022, 86412022);

--@test: session-windows - import session stream
CREATE STREAM INPUT (K INT KEY, ID bigint) WITH (kafka_topic='test_topic', value_format='DELIMITED', WINDOW_TYPE='SESSION');
CREATE STREAM S2 as SELECT * FROM INPUT;
INSERT INTO `INPUT` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 1, 0, 0, 0);
INSERT INTO `INPUT` (K, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 0);
INSERT INTO `INPUT` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 2, 10000, 0, 10000);
INSERT INTO `INPUT` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 3, 10000, 10000, 10000);
INSERT INTO `INPUT` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 4, 40000, 10000, 40000);
ASSERT VALUES `S2` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 1, 0, 0, 0);
ASSERT VALUES `S2` (K, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 0, 0, 0);
ASSERT VALUES `S2` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (0, 2, 10000, 0, 10000);
ASSERT VALUES `S2` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 3, 10000, 10000, 10000);
ASSERT VALUES `S2` (K, ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1, 4, 40000, 10000, 40000);
ASSERT stream S2 (`K` INTEGER KEY, `ID` BIGINT) WITH (KAFKA_TOPIC='S2');

--@test: session-windows - import table with invalid window size
--@expected.error: io.confluent.ksql.parser.exception.ParseFailedException
--@expected.message: 'WINDOW_SIZE' should not be set for SESSION windows.
CREATE TABLE TEST (K STRING PRIMARY KEY, ID bigint, VALUE bigint) WITH (kafka_topic='test_topic', value_format='DELIMITED', WINDOW_TYPE='Session', WINDOW_SIZE='30 seconds');
--@test: session-windows - session start stream
CREATE STREAM DATA (USER_ID INT) WITH (kafka_topic='data', value_format='JSON');
CREATE TABLE SESSIONS as SELECT USER_ID, COUNT(USER_ID) AS COUNT FROM DATA WINDOW SESSION (5 SECONDS) group by USER_ID;
CREATE STREAM SESSION_STREAM (USER_ID INT KEY, COUNT BIGINT) WITH (kafka_topic='SESSIONS', value_format='JSON', window_type='Session');
CREATE STREAM SESSION_STARTS AS SELECT * FROM SESSION_STREAM WHERE WINDOWSTART = WINDOWEND;
INSERT INTO `DATA` (user_id, ROWTIME) VALUES (5, 0);
INSERT INTO `DATA` (user_id, ROWTIME) VALUES (5, 1000);
INSERT INTO `DATA` (user_id, ROWTIME) VALUES (5, 2000);
INSERT INTO `DATA` (user_id, ROWTIME) VALUES (5, 70000);
ASSERT VALUES `SESSION_STREAM` (USER_ID, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 1, 0, 0, 0);
ASSERT VALUES `SESSION_STREAM` (USER_ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 0, 0, 0);
ASSERT VALUES `SESSION_STREAM` (USER_ID, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 2, 1000, 0, 1000);
ASSERT VALUES `SESSION_STREAM` (USER_ID, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 1000, 0, 1000);
ASSERT VALUES `SESSION_STREAM` (USER_ID, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 3, 2000, 0, 2000);
ASSERT VALUES `SESSION_STREAM` (USER_ID, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 1, 70000, 70000, 70000);
ASSERT VALUES `SESSION_STARTS` (USER_ID, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 1, 0, 0, 0);
ASSERT VALUES `SESSION_STARTS` (USER_ID, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (5, 1, 70000, 70000, 70000);
ASSERT stream SESSION_STARTS (USER_ID INT KEY, COUNT BIGINT) WITH (KAFKA_TOPIC='SESSION_STARTS');

--@test: session-windows - non-KAFKA key format
CREATE STREAM INPUT (A DECIMAL(4,2)) WITH (kafka_topic='INPUT', format='JSON');
CREATE TABLE OUTPUT AS SELECT A, COUNT() AS COUNT FROM INPUT WINDOW SESSION (30 SECONDS) group by A;
INSERT INTO `INPUT` (A, ROWTIME) VALUES (12.30, 10);
INSERT INTO `INPUT` (A, ROWTIME) VALUES (12.30, 11);
INSERT INTO `INPUT` (A, ROWTIME) VALUES (1.00, 12);
ASSERT VALUES `OUTPUT` (A, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (12.30, 1, 10, 10, 10);
ASSERT VALUES `OUTPUT` (A, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (12.30, 10, 10, 10);
ASSERT VALUES `OUTPUT` (A, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (12.30, 2, 11, 10, 11);
ASSERT VALUES `OUTPUT` (A, COUNT, ROWTIME, WINDOWSTART, WINDOWEND) VALUES (1.00, 1, 12, 12, 12);

