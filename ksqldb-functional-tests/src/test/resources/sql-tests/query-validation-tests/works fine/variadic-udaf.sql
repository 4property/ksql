--@test: variadic-udaf - missing first argument
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Function 'VAR_ARG' does not accept parameters (STRING, STRING).
CREATE STREAM INPUT (ID BIGINT KEY, FIRST bigint, SECOND string, THIRD string) WITH (kafka_topic='input_topic', value_format='JSON');
CREATE TABLE OUTPUT as SELECT id, VAR_ARG(SECOND, THIRD) as RESULT FROM INPUT group by id;
--@test: variadic-udaf - var args type mismatch
--@expected.error: io.confluent.ksql.util.KsqlStatementException
--@expected.message: Function 'VAR_ARG' does not accept parameters (BIGINT, INTEGER).
CREATE STREAM INPUT (ID BIGINT KEY, FIRST bigint, SECOND integer) WITH (kafka_topic='input_topic', value_format='JSON');
CREATE TABLE OUTPUT as SELECT id, VAR_ARG(FIRST, SECOND) as RESULT FROM INPUT group by id;
--@test: variadic-udaf - all arguments
CREATE STREAM INPUT (ID BIGINT KEY, FIRST bigint, SECOND string, THIRD string, FOURTH string) WITH (kafka_topic='input_topic', value_format='JSON');
CREATE TABLE OUTPUT as SELECT id, VAR_ARG(FIRST, SECOND, THIRD, FOURTH) as RESULT FROM INPUT group by id;
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (0, 6, 'hi', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (100, 2, 'a', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (0, NULL, 'hello', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (100, 5, 'world', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (0, 5, NULL, 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (100, 3, 'test', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (100, 2, 'testing', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (0, 21, 'aggregate', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (100, NULL, 'function', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (100, 3, 'ksql', 'hello', 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND, THIRD, FOURTH) VALUES (100, 6, 'test', 'hello', 'world');
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 18);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 13);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 33);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 33);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 48);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 50);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 69);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 88);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 87);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 104);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 124);

--@test: variadic-udaf - regular arg literal
CREATE STREAM INPUT (ID BIGINT KEY, FIRST bigint, SECOND string) WITH (kafka_topic='input_topic', value_format='JSON');
CREATE TABLE OUTPUT as SELECT id, VAR_ARG(FIRST, 'hello', '10', '20', SECOND, '3') as RESULT FROM INPUT group by id;
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, 6, 'hi');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 2, 'a');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, NULL, 'hello');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 5, 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, 5, NULL);
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 3, 'test');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 2, 'testing');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, 21, 'aggregate');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, NULL, 'function');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 3, 'ksql');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 6, 'test');
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 18);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 13);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 33);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 33);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 48);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 50);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 69);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 88);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 87);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 104);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 124);

--@test: variadic-udaf - no variadic args
CREATE STREAM INPUT (ID BIGINT KEY, FIRST bigint, SECOND string) WITH (kafka_topic='input_topic', value_format='JSON');
CREATE TABLE OUTPUT as SELECT id, VAR_ARG(FIRST) as RESULT FROM INPUT group by id;
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, 6, 'hi');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 2, 'a');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, NULL, 'hello');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 5, 'world');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, 5, NULL);
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 3, 'test');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 2, 'testing');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (0, 21, 'aggregate');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, NULL, 'function');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 3, 'ksql');
INSERT INTO `INPUT` (ID, FIRST, SECOND) VALUES (100, 6, 'test');
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 6);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 2);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 6);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 7);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 11);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 10);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 12);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (0, 32);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 12);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 15);
ASSERT VALUES `OUTPUT` (ID, RESULT) VALUES (100, 21);

